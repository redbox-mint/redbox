<h3><a href="#citations">Citations</a></h3>
<div id="citations" class="inputscreen">
  #set($cite = "dc:biblioGraphicCitation")
  #fieldTitle(${cite} "Citation Information" false)
  <div class="help-content" id="help-$cite">
    <p>Provide metadata that should be used for the purposes of citing this
      record. Sending a citation to RDA is optional, but if you choose to
      enable this there are quite specific mandatory fields that will be
      required by RIF-CS.</p>
    <p>You can use the 'PREFILL' button to collect information from elsewhere
      in this form as a starting point, <b>but please note the warning beside
        the button.</b></p>
  </div>

  <label>I will provide a citation:</label>
  <input type="checkbox" id="${cite}.redbox:sendCitation"/>
  <div class="hidden citation-block">
    <input type="button" id="${cite}.prefillBtn" value="PREFILL*"/>
    <input type="button" id="${cite}.renderBtn" value="Render Citation"/>
    <p>* <strong>NOTE</strong>: This will overwrite any values that may have been typed below using data from elsewhere
      in the form.</p>
    <blockquote>
      <div class="rdaLabel">Citation sent to RDA:</div>
      <div class="citationString"><span class="ui-button-icon-primary ui-icon ui-icon-alert"></span>Please use the
        'Render Citation' button when your citation metadata has been entered below.
      </div>
    </blockquote>
    <input type="hidden" id="${cite}.skos:prefLabel" class="fullCitation"/>
    <label class="validation-err-msg" for="${cite}.skos:prefLabel"
           data-validation-rule="test(notEmpty); when(blur, change, submit); jsTest(r = !validSimpleCitationField('${cite}.skos:prefLabel');); liveFor(.fullCitation);">
      The full citation string has not been rendered!
    </label>
  </div>

##### Full citation strings as free-text data entry were disabled in first
##### draft. This is left here in case institutions want to pursue this on
##### their own as a local customization.
##<table class="hidden citation-block">
##    <thead>
##        <tr>
##            <th>Full Citation</th>
##        </tr>
##    </thead>
##    <tbody>
##        <tr>
##            <td>
##                <label class="validation-err-msg" for="${cite}.skos:prefLabel"
##                    data-validation-rule="test(notEmpty); when(blur, change, submit); jsTest(r = !validSimpleCitationField('${cite}.skos:prefLabel');); liveFor(.fullCitation);">
##                    A citation is required!
##                </label>
##                <p>
##                    <textarea rows="2" cols="80" id="${cite}.skos:prefLabel" style="vertical-align: text-top;"
##                            placeholder="A full citation string goes here." class="fullCitation"></textarea>
##                </p>
##                <label>Citation Style:</label>
##                #mintSelectField("${cite}.dc:type.rdf:PlainLiteral"
##                                 "${cite}.dc:type.skos:prefLabel"
##                                 "$portalPath/workflows/forms/data/citationStyles.json"
##                                 "id"
##                                 "label"
##                                 "results"
##                                 "Harvard")
##            </td>
##        </tr>
##    </tbody>
##</table>

  #set($citePart = "${cite}.dc:hasPart")
  <table class="hidden citation-block">
    <thead>
    <tr>
      <th>Citation Metadata</th>
    </tr>
    </thead>
    <tbody>
    <tr>
      <td>
        <table>
          <tbody>
          <tr>
            <td>Identifier:</td>
            <td>
              <label for="useCuration">
                <input type="radio" name="${citePart}.dc:identifier.skos:note" value="useCuration" checked/>
                Use the Identifier provided during curation
              </label>
              <span id="doiOptionSpan">
                                      <strong>OR</strong>
                                      <label for="useDoi">
                                          <input type="radio" name="${citePart}.dc:identifier.skos:note"
                                                 value="useDoi"/>
                                          <span><button>Get me a DOI using ANDS 'Cite My Data'</button></span>
                                      </label>
                                    </span>
            </td>
          </tr>
          <tr>
            <td colspan="2">
              <hr/>
            </td>
          </tr>

          <tr>
            <td>Title<span class="required">(*)</span>:</td>
            <td>
              <input type="text" size="60" placeholder="Title" id="${citePart}.dc:title" class="citationTitle"/>
              <label class="validation-err-msg" for="${citePart}.dc:title"
                     data-validation-rule="test(notEmpty); when(blur, change, submit); jsTest(r = !validSimpleCitationField('${citePart}.dc:title');); liveFor(.citationTitle);">
                A citation title is required!
              </label>
            </td>
          </tr>
          <tr>
            <td colspan="2">
              <hr/>
            </td>
          </tr>

          <tr>
            <td>Creators<span class="required">(*)</span>:</td>
            <td class="input-list sortable" id="citationContributors">
              <table>
                <tbody>
                <tr>
                  <td>&nbsp;</td>
                  <td>Title</td>
                  <td>Given Name</td>
                  <td>Family Name</td>
                  <td>&nbsp;</td>
                </tr>
                <tr class="item-input-display sortable-item">
                  <td><img class="facets-grip" src="$portalPath/images/icons/grippy.png"/> <span
                      class="sort-number"></span></td>
                  <td><input type="text" size="20" placeholder="Title" id="${citePart}.locrel:ctb.0.foaf:title"/></td>
                  <td><input type="text" size="30" class="givenName" placeholder="Given Name"
                             id="${citePart}.locrel:ctb.0.foaf:givenName" class="citationContributors"/></td>
                  <td><input type="text" size="40" class="familyName" placeholder="Family Name"
                             id="${citePart}.locrel:ctb.0.foaf:familyName" class="citationContributors"/></td>
                  <td><span class="delete-item"><a href="#">delete</a></span></td>
                </tr>
                </tbody>
              </table>
              <div>
                <input type="button" class="button add-another-item" value="Add Contributor"/>
                <label class="validation-err-msg"
                       for="dc:creator.foaf:Person.0.foaf:givenName"
                       data-validation-rule="test(notEmpty); when(blur,change,submit);
                                                                    jsTest(
                                                                        var familyId, givenId, familyName, givenName;
                                                                        familyId = id.replace('given', 'family');
                                                                        givenId = id.replace('family', 'given');

                                                                        familyName = ctx.find('input[id='+familyId+']').val();
                                                                        givenName = ctx.find('input[id='+givenId+']').val();
                                                                        familyName = jQ.trim(familyName);
                                                                        givenName = jQ.trim(givenName);

                                                                        r = (givenName == '') && (familyName == '');
                                                                        id = givenId;
                                                                    );
                                                                    liveFor(.citationContributors);">
                  A citation contributor's given name or family name is required!
                </label>
              </div>
            </td>
          </tr>
          <tr>
            <td colspan="2">
              <hr/>
            </td>
          </tr>
          <tr>
            <td>Publisher<span class="required">(*)</span>:</td>
            <td>
              <input type="text" size="60" placeholder="Publisher" id="${citePart}.dc:publisher.rdf:PlainLiteral"/>
            </td>
          </tr>
          <tr>
            <td colspan="2">
              <hr/>
            </td>
          </tr>
          <tr>
            <td>URL<span class="required">(*)</span>:</td>
            <td>
              <input type="text" size="60" placeholder="URL" id="${citePart}.bibo:Website.dc:identifier"
                     class="citationUrl"/>
              <label class="validation-err-msg" for="${citePart}.bibo:Website.dc:identifier"
                     data-validation-rule="test(notEmpty); when(blur, change, submit); jsTest(r = !validSimpleCitationField('${citePart}.bibo:Website.dc:identifier');); liveFor(.citationUrl);">
                A citation URL is required!
              </label>
            </td>
          </tr>
          <tr>
            <td colspan="2">
              <hr/>
            </td>
          </tr>
          <tr>
            <td>Publication Date<span class="required">(*)</span>:</td>
            <td>
              <div>
                <input type="text" placeholder="YYYY-MM-DD" class="" id="publication-date-citation"/>
              </div>
            </td>
          </tr>
          <tr>
            <td colspan="2">
              <hr/>
            </td>
          </tr>

          <tr>
            <td>Resource Type:</td>
            <td class="input-list">
              <div class="item-input-display">
                                  <span class="data-source-drop-down"
                                        data-delay="1"
                                        data-json-source-url="$portalPath/workflows/forms/data/citationResourceTypes.json"
                                        data-id-key="id"
                                        data-label-key="label"
                                        data-list-key="results">
                                    <span class="selection-added">
                                        <input type="hidden" class="selection-added-id"
                                               id="${citePart}.resourceType"/>
                                        <input type="text" class="selection-added-label" readonly="readonly"
                                               id="${citePart}.resourceType:prefLabel"/>
                                        <a href="#" class="clear-item">change</a>
                                    </span>
                                    <span class="drop-down-location">
                                        <button id="resourceTypeButton" class="selection-add add-unique-only"
                                                data-add-on-click="1">
                                            Select
                                        </button>
                                    </span>
                                  </span>
              </div>
              <input type="text" placeholder="A free text description for your resource"
                     id="${citePart}.resourceTypeText" size="70"/>
            </td>

          </tr>
          <tr>
            <td colspan="2">
              <hr/>
              <a href='#' id='show-additional-citation-metadata'>Show additional citation metadata</a> <span
                id='hide-additional-citation-span' class='hidden'><a href='#' id='hide-additional-citation-metadata'>Hide additional citation metadata</a><hr/></span>
            </td>
          </tr>
          </tbody>
          <tbody id="additional-citation-info" class="hidden">
          <tr>
            <td>Edition:</td>
            <td>
              <input type="text" size="60" placeholder="Edition" id="${citePart}.dc:hasVersion.rdf:PlainLiteral"
                     class="citationEdition"/>
            ## RIF-CS Requires this, but it is disabled for the current implementation
            ##<label class="validation-err-msg" for="${citePart}.dc:hasVersion.rdf:PlainLiteral"
            ##    data-validation-rule="test(notEmpty); when(blur, change, submit); jsTest(r = !validSimpleCitationField('${citePart}.dc:hasVersion.rdf:PlainLiteral');); liveFor(.citationEdition);">
            ##    A citation edition is required!
            ##</label>
            </td>
          </tr>
</div>
<tr>
  <td colspan="2">
    <hr/>
  </td>
</tr>

<tr>
  <td>Place of Publication:</td>
  <td>
    <input type="text" size="60" placeholder="Place of Publication" id="${citePart}.vivo:Publisher.vivo:Location"
           class="citationPublicationLocation"/>
  ## RIF-CS Requires this, but it is disabled for the current implementation
  ##<label class="validation-err-msg" for="${citePart}.vivo:Publisher.vivo:Location"
  ##    data-validation-rule="test(notEmpty); when(blur, change, submit); jsTest(r = !validSimpleCitationField('${citePart}.vivo:Publisher.vivo:Location');); liveFor(.citationPublicationLocation);">
  ##    A citation publication location is required!
  ##</label>
  </td>
</tr>
<tr>
  <td colspan="2">
    <hr/>
  </td>
</tr>

<tr>
  <td>Date(s):</td>
  <td class="input-list sortable" id="citationDates">
    <div class="item-input-display sortable-item">
      <img class="facets-grip" src="$portalPath/images/icons/grippy.png"/>&nbsp;&nbsp;
      <input type="text" placeholder="YYYY-MM-DD" class="dateYMD" id="${citePart}.dc:date.0.rdf:PlainLiteral"/>
      <label>Date is:</label>
      <span class="data-source-drop-down"
            data-delay="1"
            data-json-source-url="$portalPath/workflows/forms/data/citationDateType.json"
            data-id-key="id"
            data-label-key="label"
            data-list-key="results">
                                            <span class="selection-added">
                                                <input type="hidden" class="selection-added-id date-type-prefId"
                                                       id="${citePart}.dc:date.0.dc:type.rdf:PlainLiteral" value=""/>
                                                <input type="text" class="selection-added-label" readonly="readonly"
                                                       size="25"
                                                       id="${citePart}.dc:date.0.dc:type.skos:prefLabel" value=""/>
                                                <a href="#" class="clear-item">change</a>
                                            </span>
                                            <span class="drop-down-location">
                                                <button class="selection-add add-unique-only" data-add-on-click="1">
                                                    Select
                                                </button>
                                            </span>
                                        </span>
      <span class="delete-item">| <a href="#">delete</a></span>
    </div>
    <div>
      <input type="button" class="button add-another-item add-citation-date" value="Add Date"/>
    </div>
  </td>
</tr>
<tr>
  <td colspan="2">
    <hr/>
  </td>
</tr>

<tr>
  <td>Context:</td>
  <td>
    <input type="text" size="60" placeholder="Citation Context" id="${citePart}.skos:scopeNote"
           class="citationContext"/>
  ## RIF-CS Requires this, but it is disabled for the current implementation
  ##<label class="validation-err-msg" for="${citePart}.skos:scopeNote"
  ##    data-validation-rule="test(notEmpty); when(blur, change, submit); jsTest(r = !validSimpleCitationField('${citePart}.skos:scopeNote');); liveFor(.citationContext);">
  ##    A citation context is required!
  ##</label>
  </td>
</tr>
<tr>
  <td colspan="2"><br/></td>
</tr>
</tbody>


</table>
</td>
</tr>
</tbody>
</table>

<script type="text/javascript">
  var doiData = packageData.andsDoiData;
  var doiCreation = true;
  if (doiData != null) {
    if ("doi" in doiData) {
      $("label[for=\"useDoi\"] span").html("Use my DOI: " + doiData.doi);
      doiCreation = false;
    } else {
      if ("error" in doiData) {
        var element = $("label[for=\"useDoi\"] span");
        element.html("Use my DOI: ");
        element.append("<span id=\"doiError\">Server error accessing DOI: " + doiData.error + "</span>");
        $("#doiError").addClass("ui-state-error");
        doiCreation = false;
      }
    }
  }

  ### Toggle Citations on/off - both on form load, or user click
  var citationsCheckbox = getReDBoxById("${cite}.redbox:sendCitation");

  function citationsDisabled() {
    return !citationsCheckbox.is(":checked");
  }

  function toggleCitations() {
    if (citationsDisabled()) {
      $(".citation-block").hide();
    } else {
      $(".citation-block").show();
    }
  }

  citationsCheckbox.live("click", function () {
    toggleCitations($(this));
  });
  citationsCheckbox.live("onDataChanged", function () {
    toggleCitations($(this));
  });

  $('#show-additional-citation-metadata').live("click", function () {
    $('#hide-additional-citation-span').show();
    $('#additional-citation-info').show();
    $(this).hide();
    return false;
  });
  $('#hide-additional-citation-metadata').live("click", function () {
    $('#additional-citation-info').hide();
    $('#show-additional-citation-metadata').show();
    $(this.parentNode).hide();
    return false;
  });
  ### Searches for and converts full publication dates to a year
  function getPubYear() {
    var pubYear = null;
    var value = $("input[id='dc:biblioGraphicCitation.dc:hasPart.dc:date.1.rdf:PlainLiteral']").val();
    if (value != null && value.length > 3) {
      pubYear = value.substring(0, 4);
    }

    return pubYear;
  }

  ### PREFILL Values
  function buildCreatorString(given, family) {
    var hasGiven = true;
    var hasFamily = true;
    if (given == null || given == "") {
      hasGiven = false;
    }

    if (family == null && family == "") {
      hasFamily = false;
    }
    if (hasGiven && hasFamily) {
      return family + ", " + given;
    }
    if (hasGiven) {
      return given;
    }
    if (hasFamily) {
      return family;
    }
    return "";
  }

  var prefillBtn = getReDBoxById("${cite}.prefillBtn");
  prefillBtn.live("click", function () {
    $(".validation-err-msg").hide();
  ### Collection Title
    var title = getReDBoxById("dc:title");
    if (title.size() != 0) {
      title = title.val();
      if (title != null && title != "") {
        getReDBoxById("${citePart}.dc:title").val(title);
      }
    }

  ### List of creators
    var i = 1;
    var creatorTitle = getReDBoxById("dc:creator.foaf:Person." + i + ".foaf:title");
    var creatorGiven = getReDBoxById("dc:creator.foaf:Person." + i + ".foaf:givenName");
    var creatorFamily = getReDBoxById("dc:creator.foaf:Person." + i + ".foaf:familyName");
    while (creatorGiven.size() != 0 || creatorFamily.size() != 0) {
      var creator = buildCreatorString(creatorGiven.val(), creatorFamily.val());
      if (creator != "") {
        var citeCreatorTitle = getReDBoxById("${citePart}.locrel:ctb." + i + ".foaf:title");
        if (citeCreatorTitle.size() == 0) {
          $("#citationContributors .add-another-item").click();
        }
        getReDBoxById("${citePart}.locrel:ctb." + i + ".foaf:title").val(creatorTitle.val());
        getReDBoxById("${citePart}.locrel:ctb." + i + ".foaf:givenName").val(creatorGiven.val());
        getReDBoxById("${citePart}.locrel:ctb." + i + ".foaf:familyName").val(creatorFamily.val());
      }
      // Update
      i++;
      creatorTitle = getReDBoxById("dc:creator.foaf:Person." + i + ".foaf:title");
      creatorGiven = getReDBoxById("dc:creator.foaf:Person." + i + ".foaf:givenName");
      creatorFamily = getReDBoxById("dc:creator.foaf:Person." + i + ".foaf:familyName");
    }

  ### Date of creation
    var created = getReDBoxById("dc:created");
    if (created.size() != 0) {
      created = created.val();
      if (created != null && created != "") {
        getReDBoxById("${citePart}.dc:date.2.rdf:PlainLiteral").val(created);
        var dateDropDown = getReDBoxById("${citePart}.dc:date.2.dc:type.rdf:PlainLiteral").parent().parent();
        var select = dateDropDown.find("select");
        select.val("created"); // Change the drop-down
        select.change(); // Change the widget state (enables button)
        dateDropDown.find("button").click(); // Click the button
      }
    }

  ### URL
    var url = getReDBoxById("bibo:Website.1.dc:identifier");
    if (url.size() != 0) {
      url = url.val();
      if (url != null && url != "") {
        getReDBoxById("${citePart}.bibo:Website.dc:identifier").val(url);
      } else {
        url = null;
      }
    } else {
      url = null;
    }
  ## Backup URL
    if (url == null) {
      var backupUrl = "${urlBase}${defaultPortal}/detail/${oid}";
      getReDBoxById("${citePart}.bibo:Website.dc:identifier").val(backupUrl);
    }
  });

  doiMetadata = {oid: "$oid"};
  doiDialog = $("<div/>").dialog({
    title: "DOIs via ANDS 'Cite My Data'",
    height: "auto",
    width: 500,
    modal: true,
    resizable: true,
    position: "center",
    draggable: true,
    autoOpen: false
  });

  if (doiCreation) {
    $("#getDoiBtn").live("click", function () {
      $("#getDoiBtn").attr("disabled", true);
      $("#getDoiLoading").show();

      jQuery.ajax({
        type: "POST",
        url: "$portalPath/actions/andsDoi.ajax",
        success:
            function (data, status) {
              $("#getDoiBtn").attr("disabled", false);
              $("#getDoiLoading").hide();
              $("#getDoiBtn").hide();
              $("#getDoiSuccess").html("Success: " + data.doi);
              $("label[for=\"useDoi\"] span").html("Use my DOI: " + data.doi);
            },
        error:
            function (req, status, e) {
              $("#getDoiBtn").attr("disabled", false);
              $("#getDoiLoading").hide();
              response = jQuery.parseJSON(req.responseText);
              alert(response.error);
            },
        dataType: "json",
        data: {
          verb: "createDoi",
          json: JSON.stringify(doiMetadata)
        }
      });
    });
  }

  function showDoiDialog() {
  ## Clear old data
    doiDialog.html("");

  ## Data Table
    var table = $("<table/>");

    function addField(label, value) {
      table.append($("<tr><th>" + label + "</th><td>" + value + "</td></tr>"));
    }

    addField("URL", "<a href=\"" + doiMetadata.url + "\" target=\"_blank\">&lt; linked here &gt;</a>");
    addField("Title", doiMetadata.title);
    var listLen = doiMetadata.creators.length;
    var creatorList = $("<ol/>");
    for (var i = 0; i < listLen; i++) {
      creatorList.append("<li>" + doiMetadata.creators[i] + "</li>");
    }
    var row = $("<tr/>");
    var heading = $("<th>Creators</th>");
    var content = $("<td/>");
    content.append(creatorList);
    row.append(heading);
    row.append(content);
    table.append(row);
    addField("Publisher", doiMetadata.publisher);
    addField("Publication Year", doiMetadata.pubYear);
    addField("Resource Type General", doiMetadata.resourceType);
    addField("Resource Type", doiMetadata.resourceTypeText);
    doiDialog.append(table);

  ## Textual information
    doiDialog.append("<p>You are about to create a DOI using the above data. <b>This is not a trivial action</b>, please make sure the above data is correct, and that you do want a DOI for this record before proceeding!</p>");
    doiDialog.append("<button id=\"getDoiBtn\">OK! Just get me the DOI</button>");
    doiDialog.append("<span id=\"getDoiSuccess\"></span>");
    doiDialog.append("<span id=\"getDoiLoading\" class=\"hidden\"> Contacting server... <img src=\"$portalPath/images/icons/loading.gif\" /></span>");

  ## Controls
    doiDialog.dialog("option", "buttons", {
      "Cancel": function () {
        doiDialog.dialog("close");
      }
    });

    doiDialog.dialog("open").dialog("moveToTop");
  }

  // Use in both DOI and Rendering
  var citeTitle = getReDBoxById("${citePart}.dc:title");
  var citeUrl = getReDBoxById("${citePart}.bibo:Website.dc:identifier");
  var citePublisher = getReDBoxById("${citePart}.dc:publisher.rdf:PlainLiteral");
  var citeResourceType = getReDBoxById("${citePart}.resourceType");
  var citeResourceTypeText = getReDBoxById("${citePart}.resourceTypeText");

  citeResourceType.live('onDataChanged', function () {
    resourceType = $(this).val();
    citeResourceType.val(resourceType);
    if ($(this).val() != null && $(this).val() != "") {
      var resourceTypeParent = $(this).parent().parent();
      resourceTypeParent.find('.selection-added').css('display', 'inline');
      resourceTypeParent.find('.drop-down-location').css('display', 'none');
    }
  });
  citeResourceTypeText.live('changed', function () {
    resourceTypeText = $(this).val();
    citeResourceTypeText.val(resourceTypeText);
  })
  if (doiCreation) {
    $("label[for=\"useDoi\"]").live("click", function () {
    ## Mandatory fields for ANDS
      var title = citeTitle.val();
      if (title == null || title == "") {
        alert("'Title' is a mandatory field for DOI");
        return false;
      } else {
        doiMetadata.title = title;
      }

      var url = citeUrl.val();
      if (url == null || url == "") {
        alert("'URL' is a mandatory field for DOI");
        return false;
      } else {
        doiMetadata.url = url;
      }

      var creatorList = $("#citationContributors tr.count-this");
      var creators = [];
      creatorList.each(function (i, element) {
        element = $(element);
        var creatorName = buildCreatorString(element.find(".givenName").val(), element.find(".familyName").val());
        if (creatorName != "") {
          creators.push(creatorName);
        }
      });
      if (creators.length == 0) {
        alert("A 'Creator' is mandatory for DOI");
        return false;
      } else {
        doiMetadata.creators = creators;
      }

      var publisher = citePublisher.val();
      if (publisher == null || publisher == "") {
        alert("'Publisher' is a mandatory field for DOI");
        return false;
      } else {
        doiMetadata.publisher = publisher;
      }

      var pubYear = getPubYear();
      if (pubYear == null) {
        alert("A Publication Year is mandatory for DOI");
        return false;
      } else {
        doiMetadata.pubYear = pubYear;
      }

      var resourceType = citeResourceType.val();
      if (resourceType == null || resourceType == "") {
        alert("'Resource Type General' is a mandatory field for DOI");
        return false;
      } else {
        doiMetadata.resourceType = resourceType;
      }
      var resourceTypeText = citeResourceTypeText.val();
      doiMetadata.resourceTypeText = resourceTypeText;
      showDoiDialog();
    });
  }

  ### Validation routines
  function validSimpleCitationField(fieldId) {
    if (!citationsDisabled()) {
      var value = getReDBoxById(fieldId).val();
      value = jQ.trim(value);
      if (value == '') {
        return false;
      }
    }
    return true;
  }

  var renderField = getReDBoxById("${cite}.skos:prefLabel");
  var renderBtn = getReDBoxById("${cite}.renderBtn");

  function citationStringSync(newString) {
    renderField.val(newString);
    $(".citationString").html(newString);
  }

  function renderCitationString() {
    var title = citeTitle.val();
    if (title == null || title == "") {
      alert("Cannot render a citation without the 'Title' field");
      return null;
    }

    var url = citeUrl.val();
    if (url == null || url == "") {
      alert("Cannot render a citation without the 'URL' field");
      return null;
    }

    var creatorList = $("#citationContributors tr.count-this");
    var creators = [];
    creatorList.each(function (i, element) {
      element = $(element);
      var creatorName = buildCreatorString(element.find(".givenName").val(), element.find(".familyName").val());
      if (creatorName != "") {
        creators.push(creatorName);
      }
    });
    if (creators.length == 0) {
      alert("Cannot render a citation without at least one 'Creator'");
      return null;
    }

    var publisher = citePublisher.val();
    if (publisher == null || publisher == "") {
      alert("Cannot render a citation without the 'Publisher' field");
      return null;
    }

    var pubYear = getPubYear();
    if (pubYear == null) {
      alert("Cannot render a citation without a Publication Date");
      return null;
    }

    var resourceType = citeResourceType.val();
    if (resourceType == null || resourceType == "") {
      alert("Cannot render a citation without the 'Resource Type' field");
      return null;
    }

    // Time to put the complete String together
    return creators.join("; ") + " (" + pubYear + "): " + title + ". " + publisher + ". (" + resourceType.toLowerCase() + "). " + "{ID_WILL_BE_HERE}";
  }

  renderBtn.live("click", function () {
    var citation = renderCitationString();
    if (citation != null) {
      citationStringSync(citation);
    }
  });

  renderField.live("onDataChanged", function () {
    var citation = $(this).val();
    if (citation != null && citation != "") {
      citationStringSync(citation);
    }
  });
</script>
</div>
