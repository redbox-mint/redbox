<h3><a href="#attachments">Attachments</a></h3>
<div id="attachments" class="inputscreen">
    #fieldTitle("attachments" "Attached Files" false)
    <div class="help-content" id="help-attachments">
        The list of files currently attached to this metadatarecord.
    </div>
    <fieldset id="add-a-file" class="widget-form"
        data-submit-url="$portalPath/actions/workflow.ajax?ajax=true&func=attach-file&oid=$oid"
        data-pre-submit-func="uploadPreSave"
        data-submit-func="fileUploadFunc"
        data-submit-result-func="uploadCompletedFunc"
        data-submit-err-result-func="uploadErrorFunc"
        data-form-fields="uploadFile, attachmentType, accessRights"
        data-form-fields-readonly="ajax, oid, func, upload-file-workflow, metaDataList, upload-file-context">

        <input type="hidden" name="ajax" value="1"/>
        <input type="hidden" name="oid" value=""/>
        <input type="hidden" name="func" value="attach-file"/>
        <input type="hidden" name="upload-file-workflow" value="attachment-upload"/>
        <input type="hidden" name="upload-file-context" value="$oid"/>
        <input type="hidden" name="metaDataList" value="[]" />

        <table>
            <thead>
                <tr>
                    <th width="50%">Filename</th>
                    <th width="10%">Type</th>
                    <th width="10%">Access</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="attached-files">
            </tbody>
            <tfoot class="add-attachment">
                <tr>
                    <td><input type="file" id="uploadFile" name="uploadFile" size="40" /></td>
                    <td>
                    	<select id="attachmentType" style="left:20em;">
                            <option value="data-file">Data file</option>
                            <option value="supporting-material">Supporting material</option>
                            <option value="readme">Read me</option>
                            <option value="ethics">Ethics</option>
                        </select>
                    	<!--TODO Instate this when data-source-dropdown is fixd
                         <span class="data-source-drop-down"
         					 data-json-source-url="$portalPath/workflows/forms/data/attachmentTypes.json"
         					 data-id-key="id"
          					 data-label-key="label"
          					data-list-key="results"          					 >

            	<span class="drop-down-location" id='attachmentType-span'>
            		<button class="selection-add add-unique-only" style='display:none' data-add-on-click="1">
               			 Select
            		</button>
        		</span-->
                    </td>
                    <td>
                        <select id="accessRights">
                            <option value="public">Public</option>
                            <option value="private">Private</option>
                        </select>
                    </td>
                    <td >
                        <a href="#" id="add-file" class="form-fields-submit">attach</a>
                        <span class="submit-result"></span>
                    </td>
                </tr>
            </tfoot>
        </table>
    </fieldset>
</div>
<script type="text/javascript">
var jQ=$;
function fileUploadFunc(widgetForm, data) {
    if (!data.uploadFile) {
        widgets.messageBox("Please select a file to be attached first!");
        jQ("#add-a-file .submit-result").html("");
        return false;
    }
    data.oid = "$oid";
    jQ("#add-file").attr("disabled", true);
    //widgets.messageBox(JSON.stringify(data));
}

function uploadCompletedFunc(widgetForm, rData) {
    if (rData.ok) {
        updateAttachedFiles(rData.attachedFiles);
    }
    jQ("#uploadFile").val("");
    jQ("#add-file").show();
}

function uploadErrorFunc(widgetForm, rData) {
    if (/already exists in storage/.test(rData.error)) {
        alert("This file already exists in the storage!\n Please select another file.")
        jQ("#add-file").show();
        jQ("#add-a-file .submit-result").html("");
        return false;
    }
}

function updateAttachedFiles(attachedFiles) {
    // Minor cosmetic improvements to strings for onscreen display
    function format(string) {
        var uppercase = function(toUpper) {
            return toUpper.toUpperCase();
        };
        return string.replace("-", " ").replace(/\b\w/g, uppercase);
    }

    var fileLink, tr, tbody = jQ("#attached-files");
    var url = "$portalPath/actions/workflow.ajax?ajax=true&func=delete-attach-file&oid=$oid";
    tbody.html("");
    if (attachedFiles.length == 0) {
        tbody.append('<tr><td colspan="4">No files currently attached.</td></tr>');
    }
    // Loop through the attachment metadata and build a UI
    jQ.each(attachedFiles, function(_, attachment) {
        tr = jQ("<tr/>");
        // A link to the attachment
        var encodedFileName = attachment.filename.split(" ").join("$0020")
        fileLink = "$portalPath/detail/" + attachment.oid + "/" + encodedFileName + "?preview=true";
        tr.append("<td><a href='" + fileLink + "' target='_blank'>" + attachment.filename + "</a></td>");
        // Details onscreen (after some cleaning)
        tr.append("<td>" + format(attachment.attachment_type) + "</td>");
        tr.append("<td>" + format(attachment.access_rights) + "</td>");
        // Delete link - and click handler
        var deleteCell = jQ('<td><a class="delete-attachment" href="#">delete</a></td>');
        deleteCell.find("a").click(function() {
            var waitingCell = jQ('<td><span style="color:darkgreen;">deleting <img src="$portalPath/images/icons/loading.gif" /></span></td>');
            deleteCell.replaceWith(waitingCell);
            jQ.ajax({
                url: url,
                data: {
                    foid: attachment.oid
                },
                type: "POST",
                dataType: "json",
                timeout: 5000,
                success: function(rJson, status) {
                    if (rJson.ok) {
                        updateAttachedFiles(rJson.attachedFiles);
                    } else {
                        alert(status);
                        waitingCell.replaceWith(deleteCell);
                    }
                },
                error: function(xhr, status, ex) {
                    alert(status);
                    waitingCell.replaceWith(deleteCell);
                }
            });
            return false;
        });
        // Add to UI
        tr.append(deleteCell);
        tbody.append(tr);
    });
}

function uploadPreSave(widgetForm, data) {
    $("#add-file").hide();
    $("#add-a-file .submit-result").html('<span style="color:darkgreen;">attaching <img src="$portalPath/images/icons/loading.gif" /></span>').show();
}

$(function() {
    var but = jQ("#add-file"), uploadFile = jQ("#uploadFile");
    but.attr("disabled", true);
    uploadFile.change(function() {
        // uploadFile.val() will fail after first upload in IE
        //but.attr("disabled", !uploadFile.val());
        but.attr("disabled", false);
    });
    updateAttachedFiles(packageData.attachedFiles);
});
</script>
